% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{restart_experiment}
\alias{restart_experiment}
\title{Restart experimental simulations.}
\usage{
restart_experiment(
  sims_obj,
  new_starts = NULL,
  stage_ts_out = FALSE,
  max_t = 250,
  save_every = 1,
  alate_field_disp_p = NULL,
  K = NULL,
  alate_b0 = NULL,
  alate_b1 = NULL,
  K_y_mult = NULL,
  s_y = NULL,
  a = NULL,
  k = NULL,
  h = NULL,
  wasp_disp_m0 = NULL,
  wasp_disp_m1 = NULL,
  wasp_field_attract = NULL,
  mum_smooth = NULL,
  pred_rate = NULL,
  sep_adults = NULL,
  show_progress = NULL,
  perturb = NULL,
  no_warns = FALSE,
  n_threads = 1L
)
}
\arguments{
\item{sims_obj}{A \code{cloneSims} object output from \code{sim_fields}.}

\item{new_starts}{A dataframe or list of dataframes indicating the
new starting abundances for all populations (wasps, mummies,
all aphid lines) and stages.
It should be the exact same format as what's in \code{sims_obj$all_info}.
(But don't change \code{sims_obj$all_info} to make this be true!)}

\item{stage_ts_out}{Single logical for whether to output stage-structured
information for all time points.
If \code{TRUE}, the output object will contain this information in the
\code{stage_ts} field, which will be a list of data frames.
Defaults to \code{FALSE}.}

\item{max_t}{How many days to simulate. Defaults to \code{250}.}

\item{save_every}{Abundances will be stored every \code{save_every} time points.
Defaults to \code{1}.}

\item{sep_adults}{Single logical for whether to separate adults vs
juvenile aphids in the output.
Useful for counting aphids with wings (adult alates).
Defaults to \code{FALSE}.}

\item{show_progress}{Boolean for whether to show progress bar.
Defaults to \code{FALSE}.}

\item{perturb}{Information for perturbing populations in the simulations.
It should be a dataframe with 4 columns:
* \code{when}: Integers indicating at what timepoint(s) to do the
perturbations. These can be repeated if you want to perturb
multiple things at the same time.
* \code{where}: What field to do the perturbations in.
* \code{who}: Which population to perturb.
This can be a character vector where values must be the name of an
aphid line, \code{"wasps"}, or \code{"mummies"}.
It can also be an integer vector where, for \code{n} aphid lines,
values \verb{<= n} indicate an aphid line,
values \verb{== n+1} indicate mummies,
and values \verb{== n+2} indicate adult wasps.
Note that perturbing the mummy population also perturbs the
still-living but parasitized aphids, too.
* \code{how}: Numbers \verb{>= 0} that are multiplied by the desired population
to cause the perturbation.}

\item{n_threads}{Number of threads to use if \code{n_reps > 1}
(ignored otherwise).
Defaults to \code{1}.}
}
\description{
Note for most of this function's arguments, their default value is \code{NULL},
which results in them being the same as for the original simulations.
The exceptions to this are the arguments \code{sims_obj}, \code{new_starts},
\code{stage_ts_out}, \code{max_t}, \code{save_every}, \code{perturb}, and \code{no_warns}.
Arguments \code{sims_obj}, \code{new_starts}, and \code{stage_ts_out} are new to this
function (see their documentation below for details).
Arguments \code{max_t} and \code{save_every} are set to \code{250} and \code{1}, respectively,
which results in a shorter time series with greater resolution, the typical
use case for this function.
Argument \code{perturb} has a default value of \code{NULL} which results in no
perturbations.
You can input a new data frame if you want to perturb these restarted
experiments.
If the initial simulations had perturbations but the new one won't,
this function will provide a warning indicating this.
You can suppress this warning by setting \code{no_warns = TRUE}.
}
